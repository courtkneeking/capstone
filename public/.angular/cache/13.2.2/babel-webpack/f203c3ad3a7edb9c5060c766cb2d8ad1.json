{"ast":null,"code":"\"use strict\";\n\n!function (e) {\n  angular.module(\"pw.canvas-painter\", []), function (e) {\n    try {\n      e = angular.module(\"pw.canvas-painter\");\n    } catch (t) {\n      e = angular.module(\"pw.canvas-painter\", []);\n    }\n\n    e.run([\"$templateCache\", function (e) {\n      e.put(\"../templates/canvas.html\", '<div class=\"pwCanvasPaint\" style=\"position:relative\"></div>');\n    }]);\n  }(), function (e) {\n    try {\n      e = angular.module(\"pw.canvas-painter\");\n    } catch (t) {\n      e = angular.module(\"pw.canvas-painter\", []);\n    }\n\n    e.run([\"$templateCache\", function (e) {\n      e.put(\"../templates/color-selector.html\", '<ul class=\"pwColorSelector\"><li ng-repeat=\"color in colorList track by $index\" class=\"pwColor\" ng-class=\"{\\'active\\': (selectedColor === color)}\" ng-style=\"{\\'background-color\\':color}\" ng-click=\"setColor(color)\"></li></ul>');\n    }]);\n  }(), angular.module(\"pw.canvas-painter\").directive(\"pwCanvas\", function () {\n    return {\n      restrict: \"AE\",\n      scope: {\n        options: \"=\",\n        version: \"=\"\n      },\n      templateUrl: \"../templates/canvas.html\",\n      link: function (t, n) {\n        var o = !!(\"ontouchstart\" in e),\n            a = o ? \"touchstart\" : \"mousedown\",\n            i = o ? \"touchmove\" : \"mousemove\",\n            r = o ? \"touchend\" : \"mouseup\",\n            c = t.options;\n\n        if (c.canvasId = c.customCanvasId || \"pwCanvasMain\", c.tmpCanvasId = c.customCanvasId ? c.canvasId + \"Tmp\" : \"pwCanvasTmp\", c.width = c.width || 400, c.height = c.height || 300, c.backgroundColor = c.backgroundColor || \"#fff\", c.color = c.color || \"#000\", c.undoEnabled = c.undoEnabled || !1, c.opacity = c.opacity || .9, c.lineWidth = c.lineWidth || 1, c.undo = c.undo || !1, c.imageSrc = c.imageSrc || !1, c.imageSrc) {\n          var l = new Image();\n          l.onload = function () {\n            p.drawImage(this, 0, 0);\n          }, l.src = c.imageSrc;\n        }\n\n        if (c.undo) {\n          var u = [];\n          t.$watch(function () {\n            return u.length;\n          }, function (e) {\n            t.version = e;\n          }), t.$watch(\"version\", function (e) {\n            return 0 > e ? (t.version = 0, void 0) : e >= u.length ? (t.version = u.length, void 0) : (b(e), void 0);\n          });\n        }\n\n        var s = document.createElement(\"canvas\");\n        s.id = c.canvasId;\n        var d = document.createElement(\"canvas\");\n        d.id = c.tmpCanvasId, angular.element(d).css({\n          position: \"absolute\",\n          top: 0,\n          left: 0\n        }), n.find(\"div\").append(s), n.find(\"div\").append(d);\n        var p = s.getContext(\"2d\"),\n            v = d.getContext(\"2d\"),\n            h = {\n          x: 0,\n          y: 0\n        },\n            f = [];\n        s.width = d.width = c.width, s.height = d.height = c.height, p.fillStyle = c.backgroundColor, p.fillRect(0, 0, s.width, s.height), v.globalAlpha = c.opacity, v.lineJoin = v.lineCap = \"round\", v.lineWidth = 10, v.strokeStyle = c.color, t.$watch(\"options.lineWidth\", function (e) {\n          \"string\" == typeof e && (e = parseInt(e, 10)), e && \"number\" == typeof e && (v.lineWidth = c.lineWidth = e);\n        }), t.$watch(\"options.color\", function (e) {\n          e && (v.strokeStyle = v.fillStyle = e);\n        }), t.$watch(\"options.opacity\", function (e) {\n          e && (v.globalAlpha = e);\n        });\n\n        var m = function (e) {\n          var t = e.getBoundingClientRect();\n          return {\n            left: t.left,\n            top: t.top\n          };\n        },\n            g = function (e, t) {\n          o ? (e.x = t.changedTouches[0].pageX - m(t.target).left, e.y = t.changedTouches[0].pageY - m(t.target).top) : (e.x = void 0 !== t.offsetX ? t.offsetX : t.layerX, e.y = void 0 !== t.offsetY ? t.offsetY : t.layerY);\n        },\n            y = function (e) {\n          if (e && (e.preventDefault(), g(h, e)), f.push({\n            x: h.x,\n            y: h.y\n          }), 3 === f.length) {\n            var t = f[0];\n            return v.beginPath(), v.arc(t.x, t.y, v.lineWidth / 2, 0, 2 * Math.PI, !0), v.fill(), v.closePath(), void 0;\n          }\n\n          v.clearRect(0, 0, d.width, d.height), v.beginPath(), v.moveTo(f[0].x, f[0].y);\n\n          for (var n = 1; n < f.length - 2; n++) {\n            var o = (f[n].x + f[n + 1].x) / 2,\n                a = (f[n].y + f[n + 1].y) / 2;\n            v.quadraticCurveTo(f[n].x, f[n].y, o, a);\n          }\n\n          v.quadraticCurveTo(f[n].x, f[n].y, f[n + 1].x, f[n + 1].y), v.stroke();\n        },\n            w = function () {\n          c.undo && t.$apply(function () {\n            u.push(p.getImageData(0, 0, d.width, d.height)), angular.isNumber(c.undo) && c.undo > 0 && (u = u.slice(-1 * c.undo));\n          }), d.removeEventListener(i, y, !1), p.drawImage(d, 0, 0), v.clearRect(0, 0, d.width, d.height), f = [];\n        },\n            C = function (e) {\n          e.preventDefault(), d.addEventListener(i, y, !1), g(h, e), f.push({\n            x: h.x,\n            y: h.y\n          }), f.push({\n            x: h.x,\n            y: h.y\n          }), y();\n        },\n            x = function () {\n          function e() {\n            u = !0;\n          }\n\n          function n() {\n            u = !1;\n          }\n\n          function i() {\n            document.body.removeEventListener(\"mousedown\", e), document.body.removeEventListener(\"mouseup\", n);\n          }\n\n          function c(e) {\n            u && C(e);\n          }\n\n          function l(e) {\n            u && w(e);\n          }\n\n          if (d.addEventListener(a, C, !1), d.addEventListener(r, w, !1), !o) {\n            var u;\n            document.body.addEventListener(\"mousedown\", e), document.body.addEventListener(\"mouseup\", n), t.$on(\"$destroy\", i), d.addEventListener(\"mouseenter\", c), d.addEventListener(\"mouseleave\", l);\n          }\n        },\n            b = function (e) {\n          u.length > 0 && (p.putImageData(u[e], 0, 0), u = u.slice(0, e));\n        };\n\n        x();\n      }\n    };\n  }), angular.module(\"pw.canvas-painter\").directive(\"pwColorSelector\", function () {\n    return {\n      restrict: \"AE\",\n      scope: {\n        colorList: \"=pwColorSelector\",\n        selectedColor: \"=color\"\n      },\n      templateUrl: \"../templates/color-selector.html\",\n      link: function (e) {\n        e.setColor = function (t) {\n          e.selectedColor = t;\n        };\n      }\n    };\n  });\n}(this);","map":null,"metadata":{},"sourceType":"script"}